import { describe, it, expect } from "vitest"; import { asyncPool } from "../src/utils/asyncPool.js"; describe("asyncPool", () => { it("processes all items with limited concurrency", async () => { const items = Array.from({ length: 10 }, (_, i) => i); let inFlight = 0; let maxFlight = 0; const results = await asyncPool(3, items, async (n) => { inFlight++; maxFlight = Math.max(maxFlight, inFlight); await new Promise(r => setTimeout(r, 5)); inFlight--; return n * 2; }); expect(results.length).toBe(10); expect(results[0]).toBe(0); expect(results[9]).toBe(18); expect(maxFlight).toBeLessThanOrEqual(3); }); });